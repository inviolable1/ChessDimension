/*! ChessDimension built on 2013-04-16 by Roger Qiu <roger.qiu@polycademy.com> */
"use strict";var app=angular.module("App",["Controllers","Filters","Services","Directives","ngResource","ngCookies","ui","ui.bootstrap"]);angular.module("Controllers",[]),angular.module("Filters",[]),angular.module("Services",[]),angular.module("Directives",[]),app.config(["$routeProvider","$locationProvider","UsersServProvider",function(e,t,o){o.setLoginPage="/auth",t.html5Mode(!0).hashPrefix("!"),e.when("/",{templateUrl:"home_index.html",controller:"HomeIndexCtrl"}).when("/auth",{templateUrl:"auth_index.html",controller:"AuthIndexCtrl"}).when("/courses",{templateUrl:"courses_index.html",controller:"CoursesIndexCtrl"}).otherwise({redirectTo:"/"})}]),app.run(["$rootScope","$cookies","$http",function(e,t,o){e.$watch(function(){return t[serverVars.csrfCookieName]},function(){o.defaults.headers.common["X-XSRF-TOKEN"]=t[serverVars.csrfCookieName]})}]),angular.module("Controllers").controller("AuthIndexCtrl",["$scope","UsersServ",function(e,t){e.logout=function(){e.$emit("authenticationDestroy",t.getUserData().id)},e.login=function(){var o={username:e.loginForm.username,password:e.loginForm.password,rememberMe:e.loginForm.rememberMe};e.loginErrors=[],e.validationErrors={},t.loginSession(o,function(){console.log("We are logged in")},function(t){console.log("Login failed, here's the errors."),"validation_error"===t.data.code&&(Array.isArray(t.data.content)?e.loginErrors=t.data.content:e.validationErrors={username:t.data.content.username,password:t.data.content.password,rememberMe:t.data.content.rememberMe})}),e.$on("authenticationProvided",function(){var o=t.getUserData();console.log(o),e.state=!0})}}]),angular.module("Controllers").controller("FooterCtrl",["$scope","httpMessages",function(e,t){e.httpMessages=t}]),angular.module("Controllers").controller("HeaderCtrl",["$scope",function(e){e.testData="Hello World!"}]),angular.module("Controllers").controller("HomeIndexCtrl",["$scope",function(e){e.data="HELLO!"}]),angular.module("Services").factory("AccountsServ",["$resource",function(e){return e("api/accounts/:id",{},{update:{method:"PUT"}})}]),angular.module("Services").config(["$provide","$httpProvider",function(e,t){var o=[];e.value("httpMessages",o),t.responseInterceptors.push(["$q",function(e){return function(t){return t.then(function(e){switch(e.config.method.toUpperCase()){case"GET":o.push({message:"Successfully Received",type:"success"});break;case"POST":o.push({message:"Successfully Posted",type:"success"});break;case"PUT":o.push({message:"Successfully Updated",type:"success"});break;case"DELETE":o.push({message:"Sucessfully Deleted",type:"success"})}return e},function(t){switch(t.status){case 400:o.push({message:"Validation failed, try tweaking your submission.",type:"failure"});break;case 401:o.push({message:"Unauthorised request, try logging in.",type:"failure"});break;case 403:o.push({message:"Unauthorised request, you don't have the permissions to view this.",type:"failure"});break;case 404:o.push({message:"404, sorry could not find what you were looking for.",type:"failure"});break;case 405:o.push({message:"The requested method was incompatible with the requested resource.",type:"failure"});break;case 500:o.push({message:"There was a server error, try again later, or contact the owners.",type:"failure"});break;default:o.push({message:t.status+" General error processing the request",type:"failure"})}return e.reject(t)})}}])}]),angular.module("Services").factory("SessionsServ",["$resource",function(e){return e("api/sessions/:id",{},{update:{method:"PUT"}})}]),angular.module("Services").config(["$httpProvider",function(e){e.responseInterceptors.push(["$q","$rootScope",function(e,t){return function(o){return o.then(function(e){return e},function(o){if(401===o.status||403===o.status){var n=e.defer(),r={config:o.config,deferred:n};return t.$broadcast("authenticationPartial",r),n.promise}return e.reject(o)})}}])}]).provider("UsersServ",function(){var e={},t="",o="/auth",n=!1,r=[];this.setLoginPage=function(e){o=e},this.$get=["$rootScope","$location","$http","AccountsServ","SessionsServ",function(s,a,i,u,c){var l={getUserData:function(){return e},setUserData:function(t){angular.extend(e,t)},registerAccount:function(e,t,o){u.save({},e,function(o){s.$broadcast("authenticationRegister",e),"function"==typeof t&&t(o)},function(e){"function"==typeof o&&o(e)})},deleteAccount:function(e,t,o){u.remove({id:e},function(o){s.$broadcast("authenticationDestroy",e),"function"==typeof t&&t(o)},function(e){"function"==typeof o&&o(e)})},getAccount:function(t,o,n){u.get({id:t},function(t){e=t.content,s.$broadcast("authenticationProvided",e),"function"==typeof o&&o(t)},function(e){"function"==typeof n&&n(e)})},loginSession:function(e,t,o){c.save({},e,function(e){s.$broadcast("authenticationLogin",e.content),"function"==typeof t&&t(e)},function(e){"function"==typeof o&&o(e)})},logoutSession:function(t,o,n){c.remove({id:t},function(t){s.$broadcast("authenticationLogout",t.content),e={},"function"==typeof o&&o(t)},function(e){"function"==typeof n&&n(e)})},getSession:function(e,t,o){c.get({id:e},function(e){e.content.userId!==void 0&&s.$broadcast("authenticationLogin",e.content.userId),"function"==typeof t&&t(e)},function(e){"function"==typeof o&&o(e)})}};return s.$on("authenticationPartial",function(o,s){0===Object.keys(e).length&&(t="",n=!0,r.push(s))}),s.$on("authenticationFull",function(){0===Object.keys(e).length&&(t=a.path,a.path(o))}),s.$on("authenticationRegister",function(e,o){t="/",l.loginSession({username:o.username,password:o.password})}),s.$on("authenticationDestroy",function(e,o){t="/",l.logoutSession(o)}),s.$on("authenticationLogin",function(e,o){l.getAccount(o),t&&(a.path(t),t="");var s=function(e){i(e.config).then(function(t){e.deferred.resolve(t)},function(t){e.deferred.reject(t)})};if(n){for(var u=0;r.length>u;u++)s(r[u]);n=!1,r=[]}}),s.$on("authenticationLogout",function(){t&&(a.path(t),t="")}),l}]}).run(["UsersServ",function(e){e.getSession(0)}]);